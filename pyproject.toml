[tool.poetry]
name = "databricks_with_poetry"
version = "0.1.0"
description = ""
authors = ["dustinvannoy-db <dustin.vannoy@databricks.com>"]
readme = "README.md"
packages = [{include = "databricks_with_poetry"}]

[tool.poetry.dependencies]
python = "^3.9.0"
urllib3 = "1.26.6"
pandas = "1.4.4"
scikit-learn = "1.1.1"


[tool.poetry.group.dev.dependencies]
databricks-connect = "13.0.0"
chispa = "^0.9.2"
pytest = "^7.0.0"
dbx = "^0.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
log_cli = 1
log_cli_level = "INFO"
log_cli_format = "[pytest][%(asctime)s][%(levelname)s][%(module)s][%(funcName)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "INFO"
markers = [
    "slow: marks tests as slow",
    "integration: marks integration tests (more than a single function)"
]

[tool.black]
line-length = 120

[tool.coverage.run]
branch = true
source = [
    "databricks_with_poetry"
]

[tool.coverage.report]

exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "dbx_gen_prospector/common.py",
    # this file is autogenerated by dbx
    "databricks_with_poetry/common.py"
]
